# Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры
# (4, 6 и 0) и 2 нечетные (3 и 5).
# Подсказка:
# На каждом шаге вам нужно 'доставать' из числа очередную цифру
# и смотреть является ли она четной или нечетной.
# При этом увеличиваем соответствующий счетчик
# Пока все числа не извлечены, рекурсивные вызовы продолжаем
# Условие завершения рекурсии - все числа извлечены
# Используем операции % //. Операции взятия по индексу применять нельзя.
# Решите через рекурсию. В задании нельзя применять циклы.
# Пример:
# Введите число: 123
# Количество четных и нечетных цифр в числе равно: (1, 2)
def even_odd_num(n, count_even, count_odd):
     
    if len(str(n)) == 1 and n%2 == 0:
        count_even += 1
        print("Количество четных и нечетных цифр в числе равно: ", end = '')
        return(count_even, count_odd)
    elif len(str(n)) == 1 and n%2 != 0:
        count_odd += 1
        print("Количество четных и нечетных цифр в числе равно: ", end = '')
        return(count_even, count_odd)
    else:
        digit = n%10
        if digit%2 == 0:
            count_even += 1
        else:
            count_odd += 1
    n = n//10
    return even_odd_num(n, count_even, count_odd)
num = int(input('Введите число: '))    
print(even_odd_num(num, 0, 0))
    
